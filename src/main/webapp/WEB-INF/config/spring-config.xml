<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- /images로 요청하면 /resources/images/위치에서 찾겠다는 의미 -->
	<!-- 이미지파일,css,js와 같은 정적리소스의 매핑을 등록 location은 실제 파일이 저장된 위치로
			 /WEB-INF부터 시작
	     mapping 이 파일들을 요청할 path정보( 사용자정의로 개발자가 요청하고 싶은 path명을 정의)
	 -->
	 <resources mapping="/resources/**" location="/resources/" />
	<!-- 이미지 -->
	<resources mapping="/images/**" location="/WEB-INF/static/images/" />
	<!-- css -->
	<resources mapping="/common/css/**" location="/WEB-INF/static/common/css/" />
	<resources mapping="/css/**" location="/WEB-INF/static/common/css/" />
	<!-- font -->
	<resources mapping="/font/**" location="/WEB-INF/static/common/font/" />
	<!--  js -->
	<resources mapping="/common/js/**" location="/WEB-INF/static/common/js/" />
	<resources mapping="/js/**" location="/WEB-INF/static/common/js/" />
	<resources mapping="/upload/**" location="/WEB-INF/upload/" />
	
	<!-- libs -->
	<resources mapping="/libs/**" location="/WEB-INF/static/libs/" />
	<!--==================================jsp파일의 위치를 이용해서 뷰정보를 만들어내는 ViewResolver====================  -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	<!-- =================================tiles를 기반으로 뷰정보를 만드는 ViewResolver등록============================ -->
	<!-- 1. tiles설정파일을 등록 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/**/*-tiles.xml</beans:value>
			</beans:list>		
		</beans:property>
	</beans:bean>
	<!-- 2. tiles기반으로 뷰를 만들 수 있도록 ViewResolver등록 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="1"/>
	</beans:bean>
	
	
	
	<beans:bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
		<beans:property name="jdbcUrl" value="jdbc:mysql://localhost:3306/erp?serverTimezone=UTC"/>
		<beans:property name="username" value="erp"/>
		<beans:property name="password" value="erp"/>
		<!-- <beans:property name="maximumPoolSize" value="20"/> -->
	</beans:bean>
	<beans:bean id="ds" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<beans:constructor-arg ref="hikariConfig"/>
	</beans:bean>
	<!-- 스프링에서 db연동할 수 있는 CLRUD메소드를 제공하는 클래스 -->
	<beans:bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:constructor-arg ref="ds" />
	</beans:bean>
	<!-- ===============================mybatis를 사용하기 위한 설정=========================== -->
	<!-- mybatis내부에서 DataSource를 통해 커넥션을 획득해서 관리하는 객체 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="ds"/>
		<beans:property name="configLocation" value="/WEB-INF/config/mybatis-config.xml"/>
	</beans:bean>
	
	<!-- mybatis의 핵심클래스(sql을 실행하기 위한 기능을 제공) -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean>
	<!-- ==========================파일업로드============================================== -->
		<beans:bean id="multipartResolver" 
			class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="4000000"/>
	</beans:bean>
	<!-- 	<interceptors>
			<interceptor>
				<mapping path="/board/**"/>
				<mapping path="/emp/mypage"/>
				<exclude-mapping path="/board/download"/>
				<beans:bean class="com.multi.erp.etc.TimeCheckintercepter"></beans:bean>
			</interceptor>
		</interceptors>
		 -->
	
	
	<context:component-scan base-package="com" />
	
</beans:beans>

